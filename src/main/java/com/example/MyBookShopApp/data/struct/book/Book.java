package com.example.MyBookShopApp.data.struct.book;

import com.example.MyBookShopApp.data.TagEntity;
import com.example.MyBookShopApp.data.struct.author.Author;
import com.example.MyBookShopApp.data.struct.book.BookRating;
import com.example.MyBookShopApp.data.struct.book.file.BookFile;
import com.example.MyBookShopApp.data.struct.book.review.BookReview;
import com.example.MyBookShopApp.data.struct.genre.GenreEntity;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

// преобразуем в Entity класс
@Entity
@Table(name = "books")
@ApiModel(description = "entity representing a book")
public class Book {

    // определяем поле которое будет содержать id сущности
    @Id
    // для автоматической генерации id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @ApiModelProperty("id generated by db automatically")
    private Integer id;

    @OneToOne
    @JoinColumn(name = "rating_id", referencedColumnName = "id")
    @JsonIgnore
    private BookRating bookRating;

    @OneToMany(mappedBy = "book")
    @JsonIgnore
    private List<BookReview> bookReviewList;

    @Column(name = "pub_date")
    @ApiModelProperty("date of book publication")
    private Date pubDate;

    // связь author_id таблицы books с id таблицы authors
    @ManyToOne
    @JoinColumn(name = "author_id", referencedColumnName = "id")
    // т.к. поле author не входит в структуру сущности по документацииб используем анотацию JsonIgnore для исключения ее из вывода
    @JsonIgnore
    private Author author;

    // для включения данного параметра в JSON ответ используем анотацию аннотаци @JsonGetter
    @JsonGetter("authors")
    public String authorsFullName(){
        return author.toString();
    }

    // связь tag_id таблицы books с id таблицы tags
    @ManyToOne
    @JoinColumn(name = "tag_id", referencedColumnName = "id")
    @JsonIgnore
    private TagEntity tagEntity;

    // связь genre_id  таблицы books с id таблицы genre
    @ManyToOne
    @JoinColumn(name = "genre_id", referencedColumnName = "id")
    @JsonIgnore
    private GenreEntity genreEntity;

    @Column(name = "is_bestseller")
    @ApiModelProperty("if isBestseller = 1 so the book is considered to be bestseller and if 0 the book is not a bestseller")
    private Integer isBestseller;

    @ApiModelProperty("mnemonical identity sequence of characters")
    private String slug;

    @Column(columnDefinition = "TEXT NOT NULL")
    @ApiModelProperty("book title")
    private String title;

    @ApiModelProperty("image url")
    private String image;

    @Column(columnDefinition = "TEXT")
    @ApiModelProperty("book description text")
    private String description;

    @Column(name = "price")
    @JsonProperty("price")
    @ApiModelProperty("book price without discount")
    private Integer priceOld;

    @Column(name = "discount")
    // для корректного отоброжения имен свойств используем анотаци JsonProperty в которой указываем настояшее имя поля
    @JsonProperty("discount")
    @ApiModelProperty("discount value for book")
    private Double price;

    @Column(name = "quantity_bought_books")
    @ApiModelProperty("quantity users bought the book")
    private Integer quantityBoughtBooks;

    @Column(name = "quantity_books_in_cart")
    @ApiModelProperty("quantity users who have the book in cart")
    private Integer quantityBooksInCart;

    @Column(name = "quantity_postponed_book")
    @ApiModelProperty("quantity users who have the book pending")
    private Integer quantityPostponedBook;

    @Column(name = "book_popularity")
    @ApiModelProperty("book popularity")
    private Double bookPopularity;

    @OneToMany(mappedBy = "book")
    private List<BookFile> bookFileList = new ArrayList<>();

    @JsonProperty
    public Integer discountPrice(){
        Integer discountPriceInt = priceOld - Math.toIntExact(Math.round(price * priceOld));
        return discountPriceInt;
    }

    public List<BookReview> getBookReviewList() {
        return bookReviewList;
    }

    public void setBookReviewList(List<BookReview> bookReviewList) {
        this.bookReviewList = bookReviewList;
    }

    public BookRating getBookRating() {
        return bookRating;
    }

    public void setBookRating(BookRating bookRating) {
        this.bookRating = bookRating;
    }

    public List<BookFile> getBookFileList() {
        return bookFileList;
    }

    public void setBookFileList(List<BookFile> bookFileList) {
        this.bookFileList = bookFileList;
    }

    public GenreEntity getGenreEntity() {
        return genreEntity;
    }

    public void setGenreEntity(GenreEntity genreEntity) {
        this.genreEntity = genreEntity;
    }


    public void setBookPopularity(Double bookPopularity) {
        this.bookPopularity = bookPopularity;
    }

    public TagEntity getTagEntity() {
        return tagEntity;
    }

    public void setTagEntity(TagEntity tagEntity) {
        this.tagEntity = tagEntity;
    }

    public Double getBookPopularity() {
        return bookPopularity;
    }

    public Integer getQuantityBoughtBooks() {
        return quantityBoughtBooks;
    }

    public void setQuantityBoughtBooks(Integer quantityBoughtBooks) {
        this.quantityBoughtBooks = quantityBoughtBooks;
    }

    public Integer getQuantityBooksInCart() {
        return quantityBooksInCart;
    }

    public void setQuantityBooksInCart(Integer quantityBooksInCart) {
        this.quantityBooksInCart = quantityBooksInCart;
    }

    public Integer getQuantityPostponedBook() {
        return quantityPostponedBook;
    }

    public void setQuantityPostponedBook(Integer quantityPostponedBook) {
        this.quantityPostponedBook = quantityPostponedBook;
    }

    public Date getPubDate() {
        return pubDate;
    }

    public void setPubDate(Date pubDate) {
        this.pubDate = pubDate;
    }

    public Integer getIsBestseller() {
        return isBestseller;
    }

    public void setIsBestseller(Integer isBestseller) {
        this.isBestseller = isBestseller;
    }

    public String getSlug() {
        return slug;
    }

    public void setSlug(String slug) {
        this.slug = slug;
    }

    public String getImage() {
        return image;
    }

    public void setImage(String image) {
        this.image = image;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Author getAuthor() {
        return author;
    }

    public void setAuthor(Author author) {
        this.author = author;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public Integer getPriceOld() {
        return priceOld;
    }

    public void setPriceOld(Integer priceOld) {
        this.priceOld = priceOld;
    }

    public Double getPrice() {
        return price;
    }

    public void setPrice(Double price) {
        this.price = price;
    }

    @Override
    public String toString() {
        return "Book{" +
                "id=" + id +
                ", author=" + author +
                ", title='" + title + '\'' +
                ", priceOld='" + priceOld + '\'' +
                ", price='" + price + '\'' +
                '}';
    }
}
