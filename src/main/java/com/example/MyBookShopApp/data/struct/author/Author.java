package com.example.MyBookShopApp.data.struct.author;

import com.example.MyBookShopApp.data.struct.book.Book;
import com.fasterxml.jackson.annotation.JsonIgnore;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.List;

@Entity
@Table(name = "authors")
// при помощи анотации ApiModel  добавляем описание сущности
@ApiModel(description =  "data model of author entity")
public class Author {

    // определяем поле которое будет содержать id сущности
    @Id
    // для автоматической генерации id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    // для поля id пр помощи анотации ApiModelProperty добавляем описание, position указывает порядок размещения полей в документации
    @ApiModelProperty(value = "author id generated by db", position = 1)
    private Integer id;

    @ApiModelProperty(value = "first name of author", example = "Jack", position = 2)
    private String firstName;

    @ApiModelProperty(value = "last name of author", example = "Richard", position = 3)
    private String lastName;

    @ApiModelProperty(value = "URL photo", example = "http://dummyimage.com/483x713.png/dddddd/000000", position = 4)
    private String photo;

    @ApiModelProperty(value = "biography of author", position = 5)
    @Column(columnDefinition = "TEXT")
    private String biography;

    @OneToMany(mappedBy = "author")
    // для того чтобы не учитывать в документации bookList используем анотацию JsonIgnore
    @JsonIgnore
    private List<Book> bookList = new ArrayList<>();

    @Override
    public String toString() {
        return firstName + ' ' + lastName;
    }

    public String getPhoto() {
        return photo;
    }

    public void setPhoto(String photo) {
        this.photo = photo;
    }

    public String getBiography() {
        return biography;
    }

    public void setBiography(String biography) {
        this.biography = biography;
    }

    public List<Book> getBookList() {
        return bookList;
    }

    public void setBookList(List<Book> bookList) {
        this.bookList = bookList;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }
}
